name: Continuous Deployment

run-name: Deployment

on:
  workflow_call:

permissions:
  id-token: write
  contents: read

env:
  DB_NAME: realworld-app
  ORG_NAME: santunioni
  PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_TOKEN_ID }}
  PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_TOKEN }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/credentials

      - id: dburl
        uses: ./.github/actions/create_pscale_db_branch_password
        with:
          db_name: ${{ env.DB_NAME }}
          org_name: ${{ env.ORG_NAME }}
          branch_name: main

      - run: npm install
        shell: bash
        name: Dependencies

      - run: npm run migration:run --workspace packages/server
        shell: bash
        name: Migrations
        env:
          DATABASE_URL: ${{ steps.dburl.outputs.DATABASE_URL }}

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.4
          terraform_wrapper: false

      - uses: actions/download-artifact@v3
        with:
          name: build
          path: packages/server/terraform

      - id: terraform
        name: Deploy Production
        working-directory: packages/server/terraform
        run: |
          terraform init -reconfigure -backend-config="key=realworld-app/production/lambda.tfstate"
          terraform refresh
          terraform apply -auto-approve
        env:
          TF_VAR_DATABASE_URL: ${{ steps.dburl.outputs.DATABASE_URL }}
          TF_VAR_ENVIRONMENT: production
