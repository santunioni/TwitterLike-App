name: Clear Ephemeral Environments

run-name: Clear

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

env:
  DB_NAME: realworld-app
  ORG_NAME: santunioni
  PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_TOKEN_ID }}
  PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_TOKEN }}

concurrency:
  group: ${{ inputs.environment }}

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/credentials

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.4
          terraform_wrapper: false

      - name: Terraform Destroy
        working-directory: terraform
        run: |
          touch lambda.zip
          terraform init
          terraform workspace select ${{ inputs.environment }} || exit 0
          terraform refresh
          terraform destroy -auto-approve
          terraform workspace select default
          terraform workspace delete ${{ inputs.environment }}
        env:
          TF_VAR_DATABASE_URL: mysql://realworld-app:realworld-app@localhost:3306/realworld-app

  pscale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Database Branch Delete
        working-directory: scripts/pscale
        run: |
          . functions.sh

          BRANCH_EXISTS=$(pscale branch list $DB_NAME --org $ORG_NAME --format json | jq -r '.[] | select(.name == "${{ inputs.environment }}") | .name')
          if [ -z "$BRANCH_EXISTS" ]; then
            echo "Branch ${{ inputs.environment }} does not exist"
            exit 0
          fi

          pscale branch delete $DB_NAME $BRANCH_EXISTS --org $ORG_NAME --force
