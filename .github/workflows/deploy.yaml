name: Deploy

on:
  workflow_call:
    inputs:
      environment:
        description: 'The name of the environment to deploy to.'
        required: true
        type: string
    outputs:
      API_BASE_URL:
        description: 'The base URL of the API to test.'
        value: ${{ jobs.deploy.outputs.API_BASE_URL }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    outputs:
      API_BASE_URL: ${{ steps.terraform.outputs.API_BASE_URL }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: |
            package.json
            package-lock.json
            packages/*/package.json

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::814320462898:role/iac
          aws-region: us-east-1

      - uses: ./.github/actions/infrastructure # Will set the Env Vars at outputs /terraform/outputs.tf
        name: Terraform
        id: terraform
        with:
          environment: ${{ inputs.environment }}

      - name: Dependencies
        shell: bash
        run: npm install

      - run: npm run migration:run --workspace packages/server
        shell: bash
        name: Migrations

      - uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/packages/client/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Build
        shell: bash
        run: npm run build
        env:
          NEXT_PUBLIC_API_BASE_URL: ${{ env.API_BASE_URL }}

      - name: Deploy
        shell: bash
        run: npm run deploy

      - name: Wait environment
        run: |
          ./scripts/wait_for_status.sh "$API_BASE_URL/api/checks/readiness" 200
          ./scripts/wait_for_status.sh "$API_BASE_URL/api/articles" 200
